// Generated by Apple Swift version 3.1 (swiftlang-802.0.53 clang-802.0.42)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if defined(__has_attribute) && __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import Dispatch;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class PPBaseClient;

SWIFT_CLASS("_TtC14PusherPlatform3App")
@interface App : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable cluster;
@property (nonatomic, strong) PPBaseClient * _Nonnull client;
- (NSString * _Nonnull)sanitiseWithPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)namespaceWithPath:(NSString * _Nonnull)path appId:(NSString * _Nonnull)appId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class NSURLSession;
@class PPURLSessionDelegate;

SWIFT_CLASS("_TtC14PusherPlatform12PPBaseClient")
@interface PPBaseClient : NSObject
@property (nonatomic, copy) NSURLComponents * _Nonnull baseUrlComponents;
@property (nonatomic, readonly, strong) NSURLSession * _Nonnull subscriptionURLSession;
@property (nonatomic, readonly, strong) PPURLSessionDelegate * _Nonnull subscriptionSessionDelegate;
@property (nonatomic, readonly, strong) NSURLSession * _Nonnull generalRequestURLSession;
@property (nonatomic, readonly, strong) PPURLSessionDelegate * _Nonnull generalRequestSessionDelegate;
@property (nonatomic, readonly) NSInteger heartbeatTimeout;
@property (nonatomic, readonly) NSInteger heartbeatInitialSize;
@property (nonatomic, readonly) BOOL insecure;
@property (nonatomic, copy) NSString * _Nonnull clientName;
@property (nonatomic, copy) NSString * _Nonnull clientVersion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class NSURLSessionDataTask;
@class NSHTTPURLResponse;
@class NSTimer;
@class NSURLResponse;

SWIFT_CLASS("_TtC14PusherPlatform24PPGeneralRequestDelegate")
@interface PPGeneralRequestDelegate : NSObject
@property (nonatomic, copy) NSData * _Nonnull data;
@property (nonatomic, strong) NSURLSessionDataTask * _Nullable task;
@property (nonatomic) NSError * _Nullable error;
@property (nonatomic, strong) NSHTTPURLResponse * _Nullable badResponse;
@property (nonatomic) NSError * _Nullable badResponseError;
@property (nonatomic, copy) void (^ _Nullable onSuccess)(NSData * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onError)(NSError * _Nonnull);
@property (nonatomic, strong) NSTimer * _Nullable waitForDataAccompanyingBadStatusCodeResponseTimer;
- (nonnull instancetype)initWithTask:(NSURLSessionDataTask * _Nullable)task OBJC_DESIGNATED_INITIALIZER;
- (void)handle:(NSURLResponse * _Nonnull)response completionHandler:(SWIFT_NOESCAPE void (^ _Nonnull)(NSURLSessionResponseDisposition))completionHandler;
- (void)handleData:(NSData * _Nonnull)data;
- (void)handleCompletionWithError:(NSError * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC14PusherPlatform23PPResumableSubscription")
@interface PPResumableSubscription : NSObject
@property (nonatomic, strong) App * _Nonnull app;
@property (nonatomic) BOOL unsubscribed;
@property (nonatomic, copy) NSString * _Nullable lastEventIdReceived;
@property (nonatomic, strong) NSTimer * _Nullable retrySubscriptionTimer;
@property (nonatomic, copy) void (^ _Nullable onOpen)(void);
@property (nonatomic, copy) void (^ _Nullable onOpening)(void);
@property (nonatomic, copy) void (^ _Nullable onResuming)(void);
@property (nonatomic, copy) void (^ _Nullable onEvent)(NSString * _Nonnull, NSDictionary<NSString *, NSString *> * _Nonnull, id _Nonnull);
@property (nonatomic, copy) void (^ _Nullable _onError)(NSError * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onError)(NSError * _Nonnull);
- (void)handleOnOpening;
- (void)handleOnOpen;
- (void)handleOnResuming;
- (void)handleOnEventWithEventId:(NSString * _Nonnull)eventId headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers data:(id _Nonnull)data;
- (void)handleOnErrorWithError:(NSError * _Nonnull)error;
- (void)setupNewSubscription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC14PusherPlatform25PPRetryableGeneralRequest")
@interface PPRetryableGeneralRequest : NSObject
@property (nonatomic, strong) App * _Nonnull app;
@property (nonatomic, strong) NSTimer * _Nullable retryRequestTimer;
@property (nonatomic, copy) void (^ _Nullable onSuccess)(NSData * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable _onError)(NSError * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onError)(NSError * _Nonnull);
- (void)handleOnSuccess:(NSData * _Nonnull)data;
- (void)handleOnErrorWithError:(NSError * _Nonnull)error;
- (void)retryRequest;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC14PusherPlatform22PPSubscriptionDelegate")
@interface PPSubscriptionDelegate : NSObject
@property (nonatomic, copy) NSData * _Nonnull data;
@property (nonatomic, strong) NSURLSessionDataTask * _Nullable task;
@property (nonatomic) NSError * _Nullable error;
@property (nonatomic, strong) NSHTTPURLResponse * _Nullable badResponse;
@property (nonatomic) NSError * _Nullable badResponseError;
@property (nonatomic, copy) void (^ _Nullable onOpening)(void);
@property (nonatomic, copy) void (^ _Nullable onOpen)(void);
@property (nonatomic, copy) void (^ _Nullable onEvent)(NSString * _Nonnull, NSDictionary<NSString *, NSString *> * _Nonnull, id _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onError)(NSError * _Nonnull);
@property (nonatomic) double heartbeatTimeout;
@property (nonatomic, strong) NSTimer * _Nullable heartbeatTimeoutTimer;
@property (nonatomic, strong) NSTimer * _Nullable waitForDataAccompanyingBadStatusCodeResponseTimer;
- (nonnull instancetype)initWithTask:(NSURLSessionDataTask * _Nullable)task OBJC_DESIGNATED_INITIALIZER;
- (void)handle:(NSURLResponse * _Nonnull)response completionHandler:(SWIFT_NOESCAPE void (^ _Nonnull)(NSURLSessionResponseDisposition))completionHandler;
- (void)handleData:(NSData * _Nonnull)data;
- (void)handleCompletionWithError:(NSError * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC14PusherPlatform20PPURLSessionDelegate")
@interface PPURLSessionDelegate : NSObject
@property (nonatomic, readonly) BOOL insecure;
@property (nonatomic, readonly, strong) dispatch_queue_t _Nonnull sessionQueue;
- (nonnull instancetype)initWithInsecure:(BOOL)insecure OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class NSURLSessionTask;
@class NSURLAuthenticationChallenge;
@class NSURLCredential;

@interface PPURLSessionDelegate (SWIFT_EXTENSION(PusherPlatform)) <NSURLSessionDataDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveResponse:(NSURLResponse * _Nonnull)response completionHandler:(void (^ _Nonnull)(NSURLSessionResponseDisposition))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
- (void)URLSession:(NSURLSession * _Nonnull)session didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
@end

#pragma clang diagnostic pop
